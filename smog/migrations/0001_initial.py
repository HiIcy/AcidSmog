# Generated by Django 2.0.2 on 2018-03-27 05:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(upload_to='http://idv093d.qiniudns.com//media/')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('about_me', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女')], max_length=10, null=True)),
                ('role', models.IntegerField(choices=[(0, 'CommonUser'), (1, 'SuperUser'), (2, 'ADMINISTER')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '画廊',
            },
        ),
        migrations.CreateModel(
            name='SlideMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=80, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': '标签',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('slidemedia_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='smog.SlideMedia')),
                ('content', models.ImageField(upload_to='http://idv093d.qiniudns.com//media/image')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smog.Folder')),
            ],
            options={
                'verbose_name': '图片',
            },
            bases=('smog.slidemedia',),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('slidemedia_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='smog.SlideMedia')),
                ('title', models.CharField(max_length=20)),
                ('pictures', models.ManyToManyField(to='smog.Picture')),
            ],
            options={
                'verbose_name': '专题',
            },
            bases=('smog.slidemedia',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('slidemedia_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='smog.SlideMedia')),
                ('content', models.FileField(upload_to='http://idv093d.qiniudns.com//media/video')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smog.Folder')),
            ],
            options={
                'verbose_name': '小视频',
            },
            bases=('smog.slidemedia',),
        ),
        migrations.AddField(
            model_name='slidemedia',
            name='uploader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='photos',
            field=models.ManyToManyField(related_name='tags', related_query_name='tag', to='smog.Picture'),
        ),
        migrations.AddField(
            model_name='subject',
            name='videos',
            field=models.ManyToManyField(to='smog.Video'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('username', 'email')},
        ),
    ]
